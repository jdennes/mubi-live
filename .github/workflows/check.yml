name: check

on:
  # Check https://mubi.com/live for the currently playing film every five minutes
  schedule:
    - cron: "*/5 * * * *"

  workflow_dispatch:

jobs:
  scheduled:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Extract current film URL
        id: extract_before
        run: echo ::set-output name=web_url::$(jq .web_url film.json)

      - name: Setup deno
        uses: denoland/setup-deno@main
        with:
          deno-version: v1.x

      - name: Get a blob representing the currently streaming film at https://mubi.com/live
        uses: githubocto/flat@v3
        with:
          http_url: https://mubi.com/live.json
          downloaded_filename: live.json
          postprocess: postprocess.ts

      - name: Extract updated film data
        id: extract_after
        run: |
          echo ::set-output name=title::$(jq .title film.json)
          echo ::set-output name=year::$(jq .year film.json)
          echo ::set-output name=country::$(jq .country film.json)
          echo ::set-output name=directors::$(jq .directors film.json)
          echo ::set-output name=web_url::$(jq .web_url film.json)
          echo ::set-output name=excerpt::$(jq .excerpt film.json)

      - name: Notify via an issue if a new film is streaming
        if: ${{ steps.extract_before.outputs.web_url != steps.extract_after.outputs.web_url }}
        uses: JasonEtco/create-an-issue@v2
        with:
          filename: .github/ISSUE_TEMPLATE/new-film.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TITLE: ${{ steps.extract_after.outputs.title }}
          YEAR: ${{ steps.extract_after.outputs.year }}
          COUNTRY: ${{ steps.extract_after.outputs.country }}
          DIRECTORS: ${{ steps.extract_after.outputs.directors }}
          WEB_URL: ${{ steps.extract_after.outputs.web_url }}
          EXCERPT: ${{ steps.extract_after.outputs.excerpt }}
